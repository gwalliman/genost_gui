//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace CapGUI.lessonService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArrayOfXElement", Namespace="http://schemas.datacontract.org/2004/07/System.Xml.Linq", ItemName="XElement")]
    public class ArrayOfXElement : System.Collections.ObjectModel.ObservableCollection<System.Xml.Linq.XElement> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="lessonService.IXmlWebService")]
    public interface IXmlWebService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IXmlWebService/listLessonPlans", ReplyAction="http://tempuri.org/IXmlWebService/listLessonPlansResponse")]
        System.IAsyncResult BeginlistLessonPlans(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<string> EndlistLessonPlans(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IXmlWebService/getLessonPlan", ReplyAction="http://tempuri.org/IXmlWebService/getLessonPlanResponse")]
        System.IAsyncResult BegingetLessonPlan(string xmlUrl, System.AsyncCallback callback, object asyncState);
        
        CapGUI.lessonService.ArrayOfXElement EndgetLessonPlan(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IXmlWebServiceChannel : CapGUI.lessonService.IXmlWebService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class listLessonPlansCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public listLessonPlansCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getLessonPlanCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getLessonPlanCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public CapGUI.lessonService.ArrayOfXElement Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((CapGUI.lessonService.ArrayOfXElement)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class XmlWebServiceClient : System.ServiceModel.ClientBase<CapGUI.lessonService.IXmlWebService>, CapGUI.lessonService.IXmlWebService {
        
        private BeginOperationDelegate onBeginlistLessonPlansDelegate;
        
        private EndOperationDelegate onEndlistLessonPlansDelegate;
        
        private System.Threading.SendOrPostCallback onlistLessonPlansCompletedDelegate;
        
        private BeginOperationDelegate onBegingetLessonPlanDelegate;
        
        private EndOperationDelegate onEndgetLessonPlanDelegate;
        
        private System.Threading.SendOrPostCallback ongetLessonPlanCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public XmlWebServiceClient() {
        }
        
        public XmlWebServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public XmlWebServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public XmlWebServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public XmlWebServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<listLessonPlansCompletedEventArgs> listLessonPlansCompleted;
        
        public event System.EventHandler<getLessonPlanCompletedEventArgs> getLessonPlanCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CapGUI.lessonService.IXmlWebService.BeginlistLessonPlans(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginlistLessonPlans(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<string> CapGUI.lessonService.IXmlWebService.EndlistLessonPlans(System.IAsyncResult result) {
            return base.Channel.EndlistLessonPlans(result);
        }
        
        private System.IAsyncResult OnBeginlistLessonPlans(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((CapGUI.lessonService.IXmlWebService)(this)).BeginlistLessonPlans(callback, asyncState);
        }
        
        private object[] OnEndlistLessonPlans(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<string> retVal = ((CapGUI.lessonService.IXmlWebService)(this)).EndlistLessonPlans(result);
            return new object[] {
                    retVal};
        }
        
        private void OnlistLessonPlansCompleted(object state) {
            if ((this.listLessonPlansCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.listLessonPlansCompleted(this, new listLessonPlansCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void listLessonPlansAsync() {
            this.listLessonPlansAsync(null);
        }
        
        public void listLessonPlansAsync(object userState) {
            if ((this.onBeginlistLessonPlansDelegate == null)) {
                this.onBeginlistLessonPlansDelegate = new BeginOperationDelegate(this.OnBeginlistLessonPlans);
            }
            if ((this.onEndlistLessonPlansDelegate == null)) {
                this.onEndlistLessonPlansDelegate = new EndOperationDelegate(this.OnEndlistLessonPlans);
            }
            if ((this.onlistLessonPlansCompletedDelegate == null)) {
                this.onlistLessonPlansCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnlistLessonPlansCompleted);
            }
            base.InvokeAsync(this.onBeginlistLessonPlansDelegate, null, this.onEndlistLessonPlansDelegate, this.onlistLessonPlansCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CapGUI.lessonService.IXmlWebService.BegingetLessonPlan(string xmlUrl, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetLessonPlan(xmlUrl, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CapGUI.lessonService.ArrayOfXElement CapGUI.lessonService.IXmlWebService.EndgetLessonPlan(System.IAsyncResult result) {
            return base.Channel.EndgetLessonPlan(result);
        }
        
        private System.IAsyncResult OnBegingetLessonPlan(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string xmlUrl = ((string)(inValues[0]));
            return ((CapGUI.lessonService.IXmlWebService)(this)).BegingetLessonPlan(xmlUrl, callback, asyncState);
        }
        
        private object[] OnEndgetLessonPlan(System.IAsyncResult result) {
            CapGUI.lessonService.ArrayOfXElement retVal = ((CapGUI.lessonService.IXmlWebService)(this)).EndgetLessonPlan(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetLessonPlanCompleted(object state) {
            if ((this.getLessonPlanCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getLessonPlanCompleted(this, new getLessonPlanCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getLessonPlanAsync(string xmlUrl) {
            this.getLessonPlanAsync(xmlUrl, null);
        }
        
        public void getLessonPlanAsync(string xmlUrl, object userState) {
            if ((this.onBegingetLessonPlanDelegate == null)) {
                this.onBegingetLessonPlanDelegate = new BeginOperationDelegate(this.OnBegingetLessonPlan);
            }
            if ((this.onEndgetLessonPlanDelegate == null)) {
                this.onEndgetLessonPlanDelegate = new EndOperationDelegate(this.OnEndgetLessonPlan);
            }
            if ((this.ongetLessonPlanCompletedDelegate == null)) {
                this.ongetLessonPlanCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetLessonPlanCompleted);
            }
            base.InvokeAsync(this.onBegingetLessonPlanDelegate, new object[] {
                        xmlUrl}, this.onEndgetLessonPlanDelegate, this.ongetLessonPlanCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override CapGUI.lessonService.IXmlWebService CreateChannel() {
            return new XmlWebServiceClientChannel(this);
        }
        
        private class XmlWebServiceClientChannel : ChannelBase<CapGUI.lessonService.IXmlWebService>, CapGUI.lessonService.IXmlWebService {
            
            public XmlWebServiceClientChannel(System.ServiceModel.ClientBase<CapGUI.lessonService.IXmlWebService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginlistLessonPlans(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("listLessonPlans", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<string> EndlistLessonPlans(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<string> _result = ((System.Collections.ObjectModel.ObservableCollection<string>)(base.EndInvoke("listLessonPlans", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BegingetLessonPlan(string xmlUrl, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = xmlUrl;
                System.IAsyncResult _result = base.BeginInvoke("getLessonPlan", _args, callback, asyncState);
                return _result;
            }
            
            public CapGUI.lessonService.ArrayOfXElement EndgetLessonPlan(System.IAsyncResult result) {
                object[] _args = new object[0];
                CapGUI.lessonService.ArrayOfXElement _result = ((CapGUI.lessonService.ArrayOfXElement)(base.EndInvoke("getLessonPlan", _args, result)));
                return _result;
            }
        }
    }
}
